after_all do
  debug
end

lane :bump do
  build_number = sh("date +%s").strip
  project_path = '../infuntory.xcodeproj'

  fastlane_require 'xcodeproj'
  xcproj = Xcodeproj::Project.open(project_path)

  xcproj.targets.each do |target|
    target.build_configuration_list.set_setting('CURRENT_PROJECT_VERSION', build_number)
  end
  xcproj.save
end

platform :ios do
  lane :omg do
    build
    release
  end

  lane :build do
    gym(
      scheme: 'infuntory',
      export_method: 'app-store',
      catalyst_platform: 'ios',

      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.joshholtz.infuntory": "inFUNtory App Store"
        }
      }
    )
  end

  lane :release do
    deliver(
      username: 'me@joshholtz.com',
      dev_portal_team_name: 'Josh Holtz',
      team_name: 'Josh Holtz',

      app_identifier: 'com.joshholtz.infuntory',
      
      ignore_language_directory_validation: true,
      run_precheck_before_submit: false,

      submit_for_review: false,

      skip_metadata: true,
      skip_screenshots: true,
      skip_binary_upload: false
    )
  end
end

platform :mac do
  lane :omg do
    build
    release
  end

  lane :build do
    gym(
      scheme: 'infuntory',
      export_method: 'app-store',
      catalyst_platform: 'macos',

      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "maccatalyst.com.joshholtz.infuntory": "inFUNtory Mac App Store"
        }
      },

      mac_app_installer_cert_name: '3rd Party Mac Developer Installer: Josh Holtz (972KS36P2U)'
    )
  end

  lane :release do
    deliver(
      username: 'me@joshholtz.com',
      dev_portal_team_name: 'Josh Holtz',
      team_name: 'Josh Holtz',

      app_identifier: 'maccatalyst.com.joshholtz.infuntory',
      platform: 'osx',
      
      ignore_language_directory_validation: true,
      run_precheck_before_submit: false,

      submit_for_review: false,

      skip_metadata: true,
      skip_screenshots: true,
      skip_binary_upload: false
    )
  end
end
